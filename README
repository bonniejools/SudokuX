##########README###########

Files included
========================
sudokusolver.c
gamesolver.c
msk_009
Testsudokus

sudokusolver.c
========================
This is a simple program which reads sudoku puzzles from a file, displays it on
the screen, sends the unsolved puzzle to gamesolver.c(solvedSudoku()) and then 
displays the the (hopefully solved) puzzle that it recieves back from
gamesolver.c on the screen next to the unsolved version for comparison. It also
collects stats on how many puzzles have been solved etc.

gamesolver.c
========================
This is the part of the program which doesn't work. The 'main' function is
solveSudoku(currentProblem[81]) which accepts an array of length 81 with each
member being a square in the sudoku ('0' being an unsolved square). Starting
with a unfinished grid, in theory it should work like this:

1) fill in all empty squares that have only one possibility.
2) if the program made a mistake (i.e an empty square is found which has no
   possible legal value), return -1
2) if solved, return 1 to the function that called it;
3) if still unsolved (empty squares exist but everything seems fine); Go into
   the first empty square, fill in the first possibility and then call the
   solveSudoku() (i.e go back to step 1) function with your new puzzle containing
   your testing square.
	i) if it fails, go back and try a different possibility
	ii) if still unsolved (go to step 2)
	iii) if solved, swap the theoretical grid with the and continue;

msk_009 & Testsudokus
========================
These are the files which contain the sudoku puzzles. There is one file per line.
Each puzzle is kept as a string of 81 numbers or dots which represent each value of
the sudoku reading along the lines of the puzzle like reading a book.

Other information
========================
1) In theory gamesolver.c should solve all Sudoku puzzles that you throw at it so
   that fact that it solves barely any is not a good thing!
2) It only works on linux at the moment due to how the program gets the file from
   the operating system

HOWTO compile
========================
$ gcc sudokux.c -lncurses
There are some dependencies needed to make this work but the gcc should tell you
which ones you need.

HOWTO run
========================
$ ./a.out msk_009
*msk_009 is the name of the file which contains all of the Sudoku puzzles. There
is also 'Testsudokus' which is much larger. If it works, you should see something
like below. Press enter to proceed through the puzzles.

                                     msk_009


             + - - - + - - - + - - - +    + - - - + - - - + - - - +
             | . 6 . | 3 . . | 8 . 4 |    | 2 6 1 | 3 7 5 | 8 9 4 |
             | 5 3 7 | . 9 . | . . . |    | 5 3 7 | 8 9 4 | 1 6 2 |
             | . 4 . | . . 6 | 3 . 7 |    | 9 4 8 | 2 1 6 | 3 5 7 |
             + - - - + - - - + - - - +    + - - - + - - - + - - - +
             | . 9 . | . 5 1 | 2 3 8 |    | 6 9 4 | 7 5 1 | 2 3 8 |
             | . . . | . . . | . . . |    | 8 2 5 | 9 4 3 | 6 7 1 |
             | 7 1 3 | 6 2 . | . 4 . |    | 7 1 3 | 6 2 8 | 9 4 5 |
             + - - - + - - - + - - - +    + - - - + - - - + - - - +
             | 3 . 6 | 4 . . | . 1 . |    | 3 5 6 | 4 8 2 | 7 1 9 |
             | . . . | . 6 . | 5 2 3 |    | 4 8 9 | 1 6 7 | 5 2 3 |
             | 1 . 2 | . . 9 | . 8 . |    | 1 7 2 | 5 3 9 | 4 8 6 |
             + - - - + - - - + - - - +    + - - - + - - - + - - - +

                        Sudoku Number:    1
                               Solved:    1
                               Failed:    0
                             Unsolved:    0
                            Remaining:    1012

I hope that I have covered everything If anything is unclear about what I'm trying
to do, just send me an email.
Jonny.